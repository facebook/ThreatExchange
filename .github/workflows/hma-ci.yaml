# Copyright (c) Meta Platforms, Inc. and affiliates.

name: Hasher Matcher Actioner CI
on:
  push:
    branches:
      - main
    paths:
      - "hasher-matcher-actioner/**"
      - ".github/workflows/hma-ci.yaml"
  pull_request:
    branches:
      - main
    paths:
      - "hasher-matcher-actioner/**"
      - ".github/workflows/hma-ci.yaml"

defaults:
  run:
    working-directory: hasher-matcher-actioner

jobs:
  lint-check:
    name: Lint python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install -e .[all]
      - name: Check code format
        run: |
          black --check ./src
  type-check:
    name: Type-Check python
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install -e .[all]
      - name: Check python types
        run: |
          python -m mypy src/OpenMediaMatch
  test:
    name: Pytest
    runs-on: ubuntu-latest
    # Service containers to run with `tests`
    services:
      postgres:
        image: postgres
        # Provide the env variables
        env:
          POSTGRES_DB: media_match_test
          POSTGRES_USER: media_match
          POSTGRES_PASSWORD: hunter2
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: docker build -t local .
      - name: Test with pytest on docker image
        run: |
          docker run --network="host" local sh -c "python -m pip install --upgrade pip ;
            pip install -e '.[test]' ;
            py.test"
