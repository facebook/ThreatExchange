{# Copyright (c) Meta Platforms, Inc. and affiliates. #}
<h3> Add Content to Bank</h3>
<form id="add_content_to_bank">
    <div class="row">
        <div class="col">
            <input class="form-control" type="file" name="file" required>
        </div>
        <div class="col">
            <select class="form-select" name="bank_name" required>
                <option selected disabled value="">Select bank</option>
                {% for b in bankList %}
                <option value="{{b['name']}}">{{b['name']}}</option>
                {% endfor %}
            </select>
        </div>
        <div class="col">
            <select class="form-select" name="content_type" required>
                <option selected disabled value="">Select content type</option>
                {% for c in content %}
                    {% if c['enabled'] %}
                        <option value="{{c['name']}}">{{c['name'].capitalize()}}</option>
                    {% endif %}
                {% endfor %}
            </select>
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
</form>
<div id="content_result">
    <!-- Added to by javascript -->
</div>
<script>
    const add_content_to_bank_form = document.getElementById("add_content_to_bank");
    const content_result = document.getElementById("content_result");

    add_content_to_bank_form.addEventListener("submit", (event) => {
        event.preventDefault();
        const formData = new FormData(event.target);
        formData.append(event.target.content_type.value, event.target.file.files[0]);
        formData.delete("file");

        fetch(`/c/bank/${event.target.bank_name.value}/content`, {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                // Handle the response from the server here
                renderAddBankResult(data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
    })

    const renderAddBankResult = (result) => {
        const hashHeader = `
                <h4>Added Hashes:</h4>
                <p>Content ID: ${result.id}</p>
            `;

        // Render hashes table
        const hashesTableHTML = renderHashTable(result.signals);

        // render on HTML
        content_result.innerHTML = hashHeader + hashesTableHTML;
    }

    const renderHashTable = (hashes) => {
        return `
                    <h3>Hash Values:</h3>
                    <table>
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                        </tr>
                        ${Object.entries(hashes).map(([key, value]) => `
                            <tr>
                                <td>${key}</td>
                                <td>${value}</td>
                            </tr>
                        `).join('')}
                    </table>
                `;
    }

</script>