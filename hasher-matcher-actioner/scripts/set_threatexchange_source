#!/bin/bash
# Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved

set -e

# Use Threatexchange from pypi or from a directory. If python-threatexchange
# from the parent directory is copied over as local-threatexchange, it causes
# the docker build to use it.

# Since local-threatexchange is installed _after_ pip install, it will override
# threatexchange.

LOCAL_LIB_LOCATION='./local-threatexchange'

usage() {
    printf 'Usage: %s pypi | local \n' "$(basename "$0")"
}

if [ ! -d "hmalib" ]; then
    printf 'Run from hasher-matcher-actioner directory\n'
    exit 1
fi

if [ $# -eq 0 ]; then
    usage && exit 1
fi

if [ $1 == "pypi" ]; then
    rm -r $LOCAL_LIB_LOCATION 2>/dev/null
    pip install . # reinstall from pypi
    exit 0
elif [ $1 == "local" ]; then
    pip uninstall -y threatexchange # remove from current site-packages

    # Clean up existing installation
    if [ -d $LOCAL_LIB_LOCATION ]; then 
        printf 'Found existing installation of local-threatexchange. Deleting...\n'
        rm -r $LOCAL_LIB_LOCATION
    else
        printf 'No existing installation of local-threatexchange found.\n'
    fi

    # Copy and install from source. Copying is necessary. A link would not work.
    # Dockerbuilds can't follow symlinks outside their context directory.
    printf 'Copying current sources to local-threatexchange.\n'
    mkdir -p $LOCAL_LIB_LOCATION

    pushd ../python-threatexchange
    find . -type f \( \
        -name "*.py" \
        -o -name "*.rst" \
        -o -name "*.md"  \
        -o -name "*.txt" \
        -o -name "PKG-INFO" \
        \) -exec cp --parents {} ../hasher-matcher-actioner/$LOCAL_LIB_LOCATION \;
    popd

    [ -f "$LOCAL_LIB_LOCATION/threatexchange.egg-info" ] && rm "$LOCAL_LIB_LOCATION/threatexchange.egg-info"

    # Install in editable mode..
    python3 -m pip install -e $LOCAL_LIB_LOCATION

    exit 0
else
    printf 'Unsupported source for threatexchange: %s\n' "$1"
    usage && exit 1
fi