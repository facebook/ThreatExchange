<!DOCTYPE html>
<html lang="en">
    <head>
    <meta charset="utf-8">
    <title>Open Media Match</title>
    </head>
    <body>
        <h1>Open Media Match</h1>
        <p>Open Media Match is up and running.</p>
        {% if not production %}
        <p>Running in development mode</p>
        <form action = "/ui/factory_reset" method = "post" enctype="multipart/form-data">  
            <input type = "submit" value="Factory Reset" style="margin-top: 8px;">  
        </form>    
        {% endif %}
        <h3> Content Types </h3>
        {% for c in content %}
            <tr>
                <td> <li> {{c['name']}}: {% if c['enabled'] %} Enabled {% else %} Disabled {% endif %} </li> </td>
            </tr>
        {% endfor %}
        <h3> Signal Types and Enabled Ratios</h3>
        {% for s in signal %}
            <tr>
                <td> <li> {{s['name']}}: {{s['enabled_ratio']}} </li> </td>
            </tr>
        {% endfor %}
        <h3> Bank Names </h3>
        {% for b in bankList %}
            <tr>
                <td> <li> {{b['name']}} </li> </td>
            </tr>
        {% endfor %}

        <!-- Create Bank -->
        <h3> Create Bank: </h3>
        <form action = "/ui/create_bank" method = "post" enctype="multipart/form-data">
            <input name="bank_name" />
            <input type = "submit" value="Submit" style="margin-left: 34px;">  
        </form>


        <!-- Add Content to Bank -->
        <h3> Add Content to Bank: </h3>
        <form action = "/ui/addcontent" method = "post" enctype="multipart/form-data">  
            <input type="file" name="file" /> Banks
            <select id="bank" name="bank">
                {% for b in bankList %}
                    <option value="{{b['name']}}">{{b['name']}}</option>
                {% endfor %}
            </select>
            <input type = "submit" value="Submit" style="margin-left: 34px;">  
        </form>  

        <!-- Rebuild Index -->
        <form action = "/ui/rebuild_index" method = "post" enctype="multipart/form-data">  
            <input type = "submit" value="Rebuild Indices" style="margin-top: 16px;">  
        </form>
        

        <!-- Match File in Banks -->
        <h1>Match File</h1>
        <form id="match_file">  
            <input type="file" name="file" />  Content Type (*required) 
            <select id="content-type" name="media">
                {% for c in content %}
                    {% if c['enabled'] %} 
                    <option value="{{c['name']}}">{{c['name']}}</option>
                    {% endif %}
                {% endfor %}
            </select>
            <input type = "submit" value="Submit" style="margin-left: 34px;">  
        </form>  
        <div id="matches"></div>

        <script>
        const match_form = document.getElementById("match_file");
        const matches = document.getElementById("matches")

        match_form.addEventListener("submit", (event) => {
            event.preventDefault();
            const formData = new FormData();

            // Append the selected file and content type to the FormData
            formData.append(event.target.media.value, event.target.file.files[0]);

            fetch('/ui/query', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                // Handle the response from the server here
                renderMatchResult(data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        })

        const renderMatchResult = (result) => {
            // Render matched banks
            const banksList = result.banks.map(bank => `<li>${bank}</li>`).join('');
            const banksHTML = `
                <h3>Matched Banks</h3>
                <ul>${banksList}</ul>
            `;

            // Render hashes table
            const hashesTableHTML = `
                <h3>Hash Values:</h3>
                <table>
                    <tr>
                        <th>Key</th>
                        <th>Value</th>
                    </tr>
                    ${Object.entries(result.hashes).map(([key, value]) => `
                        <tr>
                            <td>${key}</td>
                            <td>${value}</td>
                        </tr>
                    `).join('')}
                </table>
            `;

            // Append both the banks and hashes sections to the "matches" element
            matches.innerHTML = banksHTML + hashesTableHTML;
        }

        </script>
    </body>
</html>